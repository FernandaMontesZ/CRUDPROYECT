@model IEnumerable<CRUD.Models.Personal>


@{
    ViewBag.Title = "Información";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<!DOCTYPE html>
@using (Html.BeginForm("Index", "Personals", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Administracion de personal</title>
    </head>
    <body>
        @*Encabezado clase*@
        <div class="container">
            <button type="button" class="btn btn-primary" onclick="CreateData();">Crear personal</button>
            @Html.ActionLink("Reporte", "Reporte", "Personals", null, new { @Class = "btn btn-primary", target = "_blank" }) <br /> <br /> <br />

            <table class="table table-bordered table-hover">
                <thead>

                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ApePaterno)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ApeMaterno)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Edad)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsActive)
                        </th>
                        <th></th>
                        <th></th>
                    </tr>

                </thead>
                <tbody class="tbody">
                    @*@foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => item.Nombre, new { id = "PerNombre" })
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.ApePaterno, new { id = "PerApePa" })
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.ApeMaterno, new { id = "PerApeMa" })
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Edad, new { id = "PerEdad" })
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.IsActive, new { id = "PerIsActive" })
                            </td>
                            <td>
                                @Html.ActionLink("Editar", "GetInfID", new { id = item.ID_personal }) |
                                @Html.ActionLink("Eliminar", "Delete", new { id = item.ID_personal })
                            </td>
                        </tr>
                    }*@
                </tbody>
            </table>
        </div>
        @*vista modal crear / editar*@
        @*<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">×</button>
                        <h4 class="modal-title" id="myModalLabelTitle">CREAR PERSONAL</h4>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                <label for="Nombre">Nombre</label>
                                <input type="text" class="form-control" id="PerNombre" />
                            </div>
                            <div class="form-group">
                                <label for="ApePaterno">Apellido Paterno</label>
                                <input type="text" class="form-control" id="PerApePa" />
                            </div>
                            <div class="form-group">
                                <label for="ApeMaterno">Apellido Materno</label>
                                <input type="text" class="form-control" id="PerApeMa" />
                            </div>
                            <div class="form-group">
                                <label for="Edad">Edad</label>
                                <input type="text" class="form-control" id="PerEdad" />
                            </div>
                            <div class="form-group">
                                <label for="IsActive">IsActive</label>
                                <div class="isActID">
                                    <select name="PerIsActive" id="PerIsActiveID" size="1">
                                        <option id="ck1" value="null">No Set</option>
                                        <option id="ck2" value="true">Activo</option>
                                        <option id="ck3" value="false">No Activo</option>
                                    </select>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="Btn_CreateModal" onclick="return CreateData();">Crear</button>
                        <button type="button" class="btn btn-primary" id="btn_updateModal" style="display:none;" onclick=" return Update();">Editar</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>*@

        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/jquery-3.4.1.js"></script>
        <script src="~/Scripts/bootstrap.js"></script>
        <link href="~/Content/bootstrap.css" rel="stylesheet" />
        @*cdn sweetalert2*@
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
        @*local Js File sweetalert2*@
        @*<script src="~/Scripts/sweetalert2.js"></script>*@
        <link rel="stylesheet" href="~/Content/sweetalert2.css" />
        <script>
            var objID;
            var ID_personal;
            var isAc; 
            $(document).ready(function () { ReadData(); });

            function addRequestVerificationToken(data) {
                data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
                return data;
            };

            function ReadData() {
                $.ajax({
                    type: "GET",
                    url: '/Personals/ReadListaPersonal',
                    success: function (result) {
                        var html = '';
                        $.each(result, function (key, item) {
                            objID = item.ID_personal;
                            html += '<tr>';
                            html += '<td>' + item.Nombre + '</td>';
                            html += '<td>' + item.ApePaterno + '</td>';
                            html += '<td>' + item.ApeMaterno + '</td>';
                            html += '<td>' + item.Edad + '</td>';
                            html += '<td>' + item.IsActive + '</td>';
                            html += '<td> <button value="Editar" id="btn_update" type="button" class="btn btn-default" onclick="return getID(' + objID + ');">Editar</button> </td>';
                            html += '<td> <button value="Eliminar" id="btnDelete" type="button" class="btn btn-default" onclick="return Delete(' + objID + ');">Eliminar</button></td>';
                            html += '</tr>';
                        });
                        $('.tbody').html(html);
                    },
                    error: function () {
                        console.log("error");
                    }
                });
            }

            async function CreateData() {
                //obtener datos 
                const { value: Personal } = await Swal.fire({
                    title: 'Crear Personal',
                    html:
                        '<label>Nombre</label><input id="swal-input1" class= "swal2-input" > ' +
                        '<label>Apellido Paterno</label> <input id="swal-input2" class="swal2-input">' +
                        '<label>Apellido Materno</label> <input id="swal-input3" class="swal2-input">' +
                        '<label>Edad</label> <input id="swal-input4" class="swal2-input">' +
                        '<label>Is Active</label></br> <select  id="swal-input5"> <option value="null">No Set</option> <option value="true">Activo</option> <option value="false">No Activo</option></select>',
                    //focusConfirm: false,
                    showCancelButton: true,
                    confirmButtonText: 'Crear',
                    showLoaderOnConfirm: true,
                    preConfirm: () => {
                        var Personal = {
                            Nombre: document.getElementById('swal-input1').value,
                            ApePaterno: document.getElementById('swal-input2').value,
                            ApeMaterno: document.getElementById('swal-input3').value,
                            Edad: Number(document.getElementById('swal-input4').value),
                            IsActive: Boolean(document.getElementById('swal-input5').value)
                        }
                        return Personal;
                    }
                });
                //enviar datos peticion por ajax
                if (Personal) {
                    $.ajax({
                        type: "POST",
                        url: "/Personals/Create",
                        dataType: "json",
                        data: addRequestVerificationToken({ personal: Personal }),
                        success: function (resultado) {
                            console.log("ok");
                            if (resultado.result) {
                                Swal.fire({
                                    title: 'Personal guardado correctamente!',
                                    icon: 'success',
                                    showConfirmButton: false
                                });
                                ReadData();
                            }

                        },
                        error: function (resultado) {
                            Swal.fire({
                                title: 'No se guardaron los datos correctamente',
                                icon: 'error',
                                showConfirmButton: false
                            });
                        }
                    });
                    console.log(Personal);
                }
            }

            function getID(objID) {
                var valAct = false;
                var html = '';
                $.ajax({
                    url: "/Personals/GetInfID/" + objID,
                    type: "GET",
                    data: { ID_personal: objID },
                    success: function (data) {
                        $.each(data, function (key, item) {
                            ID_personal = item.ID_personal;
                            html += '<label>Nombre</label><input id="swal-input1" class= "swal2-input" value="' + item.Nombre + '" >';
                            html += '<label>Apellido Paterno</label> <input id="swal-input2" class="swal2-input" value="' + item.ApePaterno + '">';
                            html += '<label>Apellido Materno</label> <input id="swal-input3" class="swal2-input" value="' + item.ApeMaterno + '">';
                            html += '<label>Edad</label> <input id="swal-input4" class="swal2-input" value="' + item.Edad + '">';
                            if (item.IsActive == true) {
                                isAc = item.IsActive;
                                html += '<label>Is Active</label></br > <select id="swal-input5"> <option value="null">No Set</option> <option selected value="true">Activo</option> <option value="false">No Activo</option></select>';
                            }
                            else {
                                isAc = item.IsActive;
                                html += '<label>Is Active</label></br > <select id="swal-input5"> <option value="null">No Set</option> <option value="true">Activo</option> <option selected value="false">No Activo</option></select>';
                            }
                        });
                        Swal.fire({
                            title: 'Editar Personal',
                            html: html,
                            showCancelButton: true,
                            confirmButtonText: 'Editar',
                            showLoaderOnConfirm: true,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                var Personal = {
                                    ID_personal: ID_personal,
                                    Nombre: document.getElementById('swal-input1').value,
                                    ApePaterno: document.getElementById('swal-input2').value,
                                    ApeMaterno: document.getElementById('swal-input3').value,
                                    Edad: Number(document.getElementById('swal-input4').value),
                                    IsActive: Boolean(document.getElementById('swal-input5').value)
                                };
                                console.log(Personal);
                                $.ajax({
                                    url: "/Personals/Edit",
                                    data: addRequestVerificationToken({ personal: Personal }),
                                    type: "POST",
                                    dataType: "json",
                                    success: function (resultado) {
                                        if (resultado.result) {
                                            Swal.fire('Se edito correctamente!', '', 'success')
                                            ReadData();
                                        }
                                    },
                                    error: function (resultado) {
                                        Swal.fire('No se editó!!', '', 'info')
                                    }
                                });
                             
                            } else if (result.isDenied) {
                                Swal.fire('No se editó!!', '', 'info')
                            }
                        })
                    },

                    error: function (errormessage) {
                        console.log("Error getid")
                    }

                });

            }

            //function Update() {
            //    var Personal = {
            //        ID_personal: ID_personal,
            //        Nombre: $("#PerNombre").val(),
            //        ApePaterno: $('#PerApePa').val(),
            //        ApeMaterno: $('#PerApeMa').val(),
            //        Edad: Number($('#PerEdad').val()),
            //        IsActive: $('#PerIsActiveID').val()
            //    };
            //    $.ajax({
            //        url: "/Personals/Edit",
            //        data: addRequestVerificationToken({ personal: Personal }),
            //        type: "POST",
            //        dataType: "json",
            //        success: function (resultado) {
            //            if (resultado.result) {
            //                ReadData();

            //                $('#myModal').modal('hide');
            //                $('#PerNombre').val("");
            //                $('#PerApePa').val("");
            //                $('#PerApeMa').val("");
            //                $('#PerEdad').val("");
            //                $('#IsActive').val("null");
            //                window.location.reload();
            //            }
            //        },
            //        error: function (errormessage) {
            //            console.log("error update");
            //        }
            //    });
            //}

            function Delete(objID) {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'btn btn-danger'
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    
                    title: '¿Estas seguro de querer eliminar al empleado?',
                    text: 'Nombre',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Eliminar',
                    cancelButtonText: 'Cancelar',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Personals/Delete/" + objID,
                            type: "GET",
                            data: { ID_personal: objID },
                            contentType: "application/json;charset=UTF-8",
                            dataType: "json",
                            success: function (result) {
                                if (result.result) {
                                    swalWithBootstrapButtons.fire(
                                        '¡Eliminado!',
                                        'Se ha eliminado el persoal correctamente.',
                                        'success')
                                    ReadData();
                                }
                            }
                        });
                        
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        swalWithBootstrapButtons.fire(
                            '¡Cancelado!',
                            'No se ha realizado ninguna acción.',
                            'error'
                        )
                    }
                });

            }

            //function clearTextBox() {
            //    $('#PerNombre').val("");
            //    $('#PerApePa').val("");
            //    $('#PerApeMa').val("");
            //    $('#PerEdad').val("");
            //    $('#IsActive').val("");
            //    $('#btn_updateModal').hide();
            //    $('#Btn_CreateModal').show();
            //}

        </script>

    </body>
</html>

}


